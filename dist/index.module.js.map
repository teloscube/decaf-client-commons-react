{"version":3,"file":"index.module.js","sources":["../src/context.tsx","../src/ZendeskWidget.tsx","../src/DecafSpinner.tsx","../src/DecafApp.tsx"],"sourcesContent":["import { buildDecafClient, DecafClient } from '@decafhub/decaf-client';\nimport Cookies from 'js-cookie';\nimport React, { useContext } from 'react';\n\nexport const DecafContext = React.createContext<DecafContextType>({\n  client: undefined as unknown as DecafClient,\n  me: undefined as unknown as Principal,\n  publicConfig: undefined as unknown as PublicConfig,\n});\n\nexport function DecafProvider({ children, value }: { children: JSX.Element; value: DecafContextType }) {\n  return <DecafContext.Provider value={value}>{children}</DecafContext.Provider>;\n}\n\nexport const useDecaf = () => useContext(DecafContext);\n\n/// ///////////////////////\n// INTERNAL DEFINITIONS //\n/// ///////////////////////\n\nexport function getAuthenticationToken(): string | undefined {\n  // Attempt to get the cookie value:\n  const cookie = Cookies.get('ember_simple_auth-session');\n\n  // If no cookie, return nothing:\n  if (!cookie) {\n    return undefined;\n  }\n\n  try {\n    // Attempt to parse the cookie value:\n    const authinfo = JSON.parse(cookie);\n\n    // Get the token, if any:\n    const token: string | undefined = authinfo?.authenticated?.token;\n\n    // Done, return the token:\n    return token;\n  } catch {\n    console.error('Can not parse authentication information!');\n    return undefined;\n  }\n}\n\nexport function getAuthenticatedDecafClient(): DecafClient | undefined {\n  // Attempt to get the authentication token:\n  const token = getAuthenticationToken();\n\n  // Check token, build client and return:\n  return token ? buildDecafClient('', { token }) : undefined;\n}\n\nexport interface DecafContextType {\n  client: DecafClient;\n  me: Principal;\n  publicConfig: PublicConfig;\n}\nexport interface Role {\n  code: string;\n  name: string;\n}\n\nexport interface Team {\n  id: number;\n  name: string;\n}\n\nexport interface Principal {\n  id: number;\n  guid: string;\n  username: string;\n  fullname: string;\n  first_name: string;\n  last_name: string;\n  email?: string;\n  mobile?: string;\n  active: boolean;\n  roles: Role[];\n  teams: Team[];\n  internal: boolean;\n  external: boolean;\n  privileged: boolean;\n}\n\nexport interface PublicConfig {\n  /** company short name */\n  shortname: string;\n  /** company full name */\n  legalname: string;\n  /** company web site */\n  website: string;\n  /** logo url */\n  logo: string;\n  /** terms and conditions */\n  tnc: string;\n  /** zendeks code */\n  zendesk?: string;\n  /** google analytics code */\n  googleax?: string;\n  /** one-time password feature? */\n  otp: null;\n  /** password reset feature should be enabled or not */\n  pwdreset: true;\n}\n","import { useEffect } from 'react';\n\nexport interface ZendeskWidgetProps {\n  /** public zendesk key */\n  zendeskKey: string;\n  /** zendesk widget settings. see:\n   *\n   * https://developer.zendesk.com/api-reference/widget/settings/\n   * */\n  settings?: Record<string, any>;\n}\n\nconst ZENDESK_WIDGET_SCRIPT = 'https://static.zdassets.com/ekr/snippet.js';\n\nexport default function ZendeskWidget(props: ZendeskWidgetProps) {\n  useEffect(() => {\n    if (!props.zendeskKey) return;\n    const script = document.createElement('script');\n    script.src = ZENDESK_WIDGET_SCRIPT + '?key=' + props.zendeskKey;\n    script.async = true;\n    script.id = 'ze-snippet'; // do not change this. zendesk expects this to be ze-snippet\n    document.body.appendChild(script);\n    // @ts-expect-error\n    window.zESettings = props.settings || {};\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [props]);\n\n  return null;\n}\n","import React from 'react';\n\nexport type DecafSpinnerType = {\n  title?: string;\n  color?: string;\n  size?: number;\n  titleColor?: string;\n};\n/**\n *\n * @param title string\n * @param color string\n * @param size number\n * @param titleColor string\n * @returns JSX.Element\n */\nexport default function DecafSpinner(props: DecafSpinnerType) {\n  const style = `\n    .spinner-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n      flex-direction: column;\n    }\n    .spinner-text {\n      color: ${props.titleColor || '#255d91'};\n    }\n    .spinner {\n      width: ${props.size || '40px'};\n      height: ${props.size || '40px'};\n      position: relative;\n      margin: 10px auto;\n    }\n\n    .double-bounce1,\n    .double-bounce2 {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: ${props.color || '#1890ff'};\n      opacity: 0.6;\n      position: absolute;\n      top: 0;\n      left: 0;\n\n      -webkit-animation: sk-bounce 2s infinite ease-in-out;\n      animation: sk-bounce 2s infinite ease-in-out;\n    }\n\n    .double-bounce2 {\n      -webkit-animation-delay: -1s;\n      animation-delay: -1s;\n    }\n\n    @-webkit-keyframes sk-bounce {\n      0%,\n      100% {\n        -webkit-transform: scale(0);\n      }\n      50% {\n        -webkit-transform: scale(1);\n      }\n    }\n\n    @keyframes sk-bounce {\n      0%,\n      100% {\n        transform: scale(0);\n        -webkit-transform: scale(0);\n      }\n      50% {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n      }\n    }\n  `;\n  return (\n    <div className=\"spinner-wrapper\">\n      <style>{style}</style>\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n      {props.title && <p className=\"spinner-text\">{props.title}</p>}\n    </div>\n  );\n}\n","import { DecafClient } from '@decafhub/decaf-client';\nimport React, { useEffect } from 'react';\nimport ZendeskWidget from 'ZendeskWidget';\nimport { DecafContext, getAuthenticatedDecafClient, Principal, PublicConfig } from './context';\nimport DecafSpinner from './DecafSpinner';\n\nexport type DecafAppType = {\n  children: JSX.Element;\n};\n\nexport default function DecafApp(props: DecafAppType) {\n  const [client, setClient] = React.useState<DecafClient | undefined>(undefined);\n  const [me, setMe] = React.useState<Principal | undefined>(undefined);\n  const [publicConfig, setPublicConfig] = React.useState<PublicConfig | undefined>(undefined);\n  const [loading, setLoading] = React.useState(true);\n\n  function cleanUp() {\n    setClient(undefined);\n    setMe(undefined);\n    setPublicConfig(undefined);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const client = getAuthenticatedDecafClient();\n    if (client) {\n      Promise.all([client.barista.get('/me/'), client.barista.get('/conf/public/')])\n        .then(([meResp, configResp]) => {\n          setClient(client);\n          setMe(meResp.data);\n          setPublicConfig(configResp.data);\n          setLoading(false);\n        })\n        .catch(cleanUp);\n    } else {\n      cleanUp();\n    }\n  }, []);\n\n  if (loading) {\n    return <DecafSpinner title=\"Please Wait...\" />;\n  }\n\n  if (client === undefined || me === undefined || publicConfig === undefined) {\n    window.location.href = `/webapps/waitress/production/?next=${window.location.href}`;\n    return null;\n  }\n\n  return (\n    <DecafContext.Provider value={{ client, me, publicConfig }}>\n      {publicConfig.zendesk && (\n        <ZendeskWidget\n          zendeskKey={publicConfig.zendesk}\n          settings={{\n            contactForm: {\n              fields: [\n                {\n                  id: 'name',\n                  prefill: { '*': me.fullname },\n                },\n                {\n                  id: 'email',\n                  prefill: { '*': me.email },\n                },\n              ],\n            },\n          }}\n        />\n      )}\n      {props.children}\n    </DecafContext.Provider>\n  );\n}\n"],"names":["DecafContext","React","createContext","client","undefined","me","publicConfig","useDecaf","useContext","ZendeskWidget","props","useEffect","zendeskKey","script","document","createElement","src","ZENDESK_WIDGET_SCRIPT","async","id","body","appendChild","window","zESettings","settings","removeChild","DecafSpinner","className","titleColor","size","color","title","DecafApp","useState","setClient","setMe","setPublicConfig","loading","setLoading","cleanUp","token","cookie","Cookies","get","authinfo","JSON","parse","authenticated","_authinfo$authenticat","console","error","getAuthenticationToken","buildDecafClient","Promise","all","barista","then","meResp","configResp","data","location","href","Provider","value","zendesk","contactForm","fields","prefill","fullname","email","children"],"mappings":"4IAIaA,EAAeC,EAAMC,cAAgC,CAChEC,YAAQC,EACRC,QAAID,EACJE,kBAAcF,IAOHG,EAAW,kBAAMC,EAAWR,aCAjBS,EAAcC,GAepC,OAdAC,EAAU,WACR,GAAKD,EAAME,WAAX,CACA,IAAMC,EAASC,SAASC,cAAc,UAOtC,OANAF,EAAOG,IAAMC,kDAAkCP,EAAME,WACrDC,EAAOK,OAAQ,EACfL,EAAOM,GAAK,aACZL,SAASM,KAAKC,YAAYR,GAE1BS,OAAOC,WAAab,EAAMc,UAAY,cAEpCV,SAASM,KAAKK,YAAYZ,MAE3B,CAACH,kBCXkBgB,EAAahB,GA6DnC,OACET,uBAAK0B,UAAU,mBACb1B,2OArDSS,EAAMkB,YAAc,sDAGpBlB,EAAMmB,MAAQ,6BACbnB,EAAMmB,MAAQ,sNAUJnB,EAAMoB,OAAS,stBAwCnC7B,uBAAK0B,UAAU,WACb1B,uBAAK0B,UAAU,mBACf1B,uBAAK0B,UAAU,oBAEhBjB,EAAMqB,OAAS9B,qBAAG0B,UAAU,gBAAgBjB,EAAMqB,iBC1EjCC,EAAStB,GAC/B,MAA4BT,EAAMgC,cAAkC7B,GAA7DD,OAAQ+B,SACKjC,EAAMgC,cAAgC7B,GAAnDC,OAAI8B,SAC6BlC,EAAMgC,cAAmC7B,GAA1EE,OAAc8B,SACSnC,EAAMgC,UAAS,GAAtCI,OAASC,OAEhB,SAASC,IACPL,OAAU9B,GACV+B,OAAM/B,GACNgC,OAAgBhC,GAChBkC,GAAW,GAmBb,OAhBA3B,EAAU,WACR,IHsBI6B,EGtBErC,GHsBFqC,aAxBN,IAAMC,EAASC,EAAQC,IAAI,6BAG3B,GAAKF,EAIL,UAEQG,EAAWC,KAAKC,MAAML,GAM5B,aAHkCG,YAAAA,EAAUG,sBAAVC,EAAyBR,MAI3D,SAEA,YADAS,QAAQC,MAAM,8CAOFC,IAGCC,EAAiB,GAAI,CAAEZ,MAAAA,SAAWpC,EGxB3CD,EACFkD,QAAQC,IAAI,CAACnD,EAAOoD,QAAQZ,IAAI,QAASxC,EAAOoD,QAAQZ,IAAI,mBACzDa,KAAK,gBAAEC,OAAQC,OACdxB,EAAU/B,GACVgC,EAAMsB,EAAOE,MACbvB,EAAgBsB,EAAWC,MAC3BrB,GAAW,WAENC,GAETA,KAED,IAECF,EACKpC,gBAACyB,GAAaK,MAAM,wBAGd3B,IAAXD,QAA+BC,IAAPC,QAAqCD,IAAjBE,GAC9CgB,OAAOsC,SAASC,2CAA6CvC,OAAOsC,SAASC,WAK7E5D,gBAACD,EAAa8D,UAASC,MAAO,CAAE5D,OAAAA,EAAQE,GAAAA,EAAIC,aAAAA,IACzCA,EAAa0D,SACZ/D,gBAACQ,GACCG,WAAYN,EAAa0D,QACzBxC,SAAU,CACRyC,YAAa,CACXC,OAAQ,CACN,CACE/C,GAAI,OACJgD,QAAS,CAAE,IAAK9D,EAAG+D,WAErB,CACEjD,GAAI,QACJgD,QAAS,CAAE,IAAK9D,EAAGgE,aAO9B3D,EAAM4D"}