{"version":3,"file":"index.module.js","sources":["../src/context.tsx","../src/DecafSpinner.tsx","../src/DecafApp.tsx"],"sourcesContent":["import { buildDecafClient, DecafClient } from '@decafhub/decaf-client';\nimport Cookies from 'js-cookie';\nimport React, { useContext } from 'react';\n\nexport interface DecafContextType {\n  client: DecafClient;\n}\n\nexport const DecafContext = React.createContext<DecafContextType>({\n  client: undefined as unknown as DecafClient,\n});\n\nexport function DecafProvider({ children, value }: { children: JSX.Element; value: DecafContextType }) {\n  return <DecafContext.Provider value={value}>{children}</DecafContext.Provider>;\n}\n\nexport const useDecaf = () => useContext(DecafContext);\n\n/// ///////////////////////\n// INTERNAL DEFINITIONS //\n/// ///////////////////////\n\nexport function getAuthenticationToken(): string | undefined {\n  // Attempt to get the cookie value:\n  const cookie = Cookies.get('ember_simple_auth-session');\n\n  // If no cookie, return nothing:\n  if (!cookie) {\n    return undefined;\n  }\n\n  try {\n    // Attempt to parse the cookie value:\n    const authinfo = JSON.parse(cookie);\n\n    // Get the token, if any:\n    const token: string | undefined = authinfo?.authenticated?.token;\n\n    // Done, return the token:\n    return token;\n  } catch {\n    console.error('Can not parse authentication information!');\n    return undefined;\n  }\n}\n\nexport function getAuthenticatedDecafClient(): DecafClient | undefined {\n  // Attempt to get the authentication token:\n  const token = getAuthenticationToken();\n\n  // Check token, build client and return:\n  return token ? buildDecafClient('', { token }) : undefined;\n}\n\nexport function getAuthenticatedDecafClientOrRedirect(): DecafClient {\n  const client = getAuthenticatedDecafClient();\n\n  if (client === undefined) {\n    window.location.href = `/webapps/waitress/production?next=${window.location.href}`;\n    return undefined as unknown as DecafClient;\n  }\n\n  return client;\n}\n","import React from 'react';\n\nexport type DecafSpinnerType = {\n  title?: string;\n  color?: string;\n  size?: number;\n  titleColor?: string;\n};\n/**\n *\n * @param title string\n * @param color string\n * @param size number\n * @param titleColor string\n * @returns JSX.Element\n */\nexport default function DecafSpinner(props: DecafSpinnerType) {\n  const style = `\n    .spinner-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n      flex-direction: column;\n    }\n    .spinner-text {\n      color: ${props.titleColor || '#255d91'};\n    }\n    .spinner {\n      width: ${props.size || '40px'};\n      height: ${props.size || '40px'};\n      position: relative;\n      margin: 10px auto;\n    }\n\n    .double-bounce1,\n    .double-bounce2 {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: ${props.color || '#1890ff'};\n      opacity: 0.6;\n      position: absolute;\n      top: 0;\n      left: 0;\n\n      -webkit-animation: sk-bounce 2s infinite ease-in-out;\n      animation: sk-bounce 2s infinite ease-in-out;\n    }\n\n    .double-bounce2 {\n      -webkit-animation-delay: -1s;\n      animation-delay: -1s;\n    }\n\n    @-webkit-keyframes sk-bounce {\n      0%,\n      100% {\n        -webkit-transform: scale(0);\n      }\n      50% {\n        -webkit-transform: scale(1);\n      }\n    }\n\n    @keyframes sk-bounce {\n      0%,\n      100% {\n        transform: scale(0);\n        -webkit-transform: scale(0);\n      }\n      50% {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n      }\n    }\n  `;\n  return (\n    <div className=\"spinner-wrapper\">\n      <style>{style}</style>\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n      {props.title && <p className=\"spinner-text\">{props.title}</p>}\n    </div>\n  );\n}\n","import { DecafClient } from '@decafhub/decaf-client';\nimport React, { useEffect } from 'react';\nimport { DecafContext, getAuthenticatedDecafClient } from './context';\nimport DecafSpinner from './DecafSpinner';\n\nexport type DecafAppType = {\n  children: JSX.Element;\n};\n\nexport default function DecafApp(props: DecafAppType) {\n  const [client, setClient] = React.useState<DecafClient | undefined>(undefined);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    const client = getAuthenticatedDecafClient();\n    if (client) {\n      client.barista\n        .get('/healthchecks/')\n        .then(() => {\n          setClient(client);\n          setLoading(false);\n        })\n        .catch(() => {\n          setClient(undefined);\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n      setClient(undefined);\n    }\n  }, []);\n\n  if (loading) {\n    return <DecafSpinner title=\"Please Wait...\" />;\n  }\n\n  if (client === undefined) {\n    window.location.href = `/webapps/waitress/production?next=${window.location.href}`;\n    return null;\n  }\n\n  return <DecafContext.Provider value={{ client: client }}>{props.children}</DecafContext.Provider>;\n}\n"],"names":["DecafContext","React","createContext","client","undefined","useDecaf","useContext","DecafSpinner","props","className","titleColor","size","color","title","DecafApp","useState","setClient","loading","setLoading","useEffect","token","cookie","Cookies","get","authinfo","JSON","parse","authenticated","_authinfo$authenticat","console","error","getAuthenticationToken","buildDecafClient","barista","then","window","location","href","Provider","value","children"],"mappings":"4IAQaA,EAAeC,EAAMC,cAAgC,CAChEC,YAAQC,IAOGC,EAAW,kBAAMC,EAAWN,aCAjBO,EAAaC,GA6DnC,OACEP,uBAAKQ,UAAU,mBACbR,2OArDSO,EAAME,YAAc,sDAGpBF,EAAMG,MAAQ,6BACbH,EAAMG,MAAQ,sNAUJH,EAAMI,OAAS,stBAwCnCX,uBAAKQ,UAAU,WACbR,uBAAKQ,UAAU,mBACfR,uBAAKQ,UAAU,oBAEhBD,EAAMK,OAASZ,qBAAGQ,UAAU,gBAAgBD,EAAMK,iBC3EjCC,EAASN,GAC/B,MAA4BP,EAAMc,cAAkCX,GAA7DD,OAAQa,SACef,EAAMc,UAAS,GAAtCE,OAASC,OAqBhB,OAnBAC,EAAU,WACR,IFkCIC,EElCEjB,GFkCFiB,aAxBN,IAAMC,EAASC,EAAQC,IAAI,6BAG3B,GAAKF,EAIL,UAEQG,EAAWC,KAAKC,MAAML,GAM5B,aAHkCG,YAAAA,EAAUG,sBAAVC,EAAyBR,MAI3D,SAEA,YADAS,QAAQC,MAAM,8CAOFC,IAGCC,EAAiB,GAAI,CAAEZ,MAAAA,SAAWhB,EEpC3CD,EACFA,EAAO8B,QACJV,IAAI,kBACJW,KAAK,WACJlB,EAAUb,GACVe,GAAW,WAEN,WACLF,OAAUZ,GACVc,GAAW,MAGfA,GAAW,GACXF,OAAUZ,KAEX,IAECa,EACKhB,gBAACM,GAAaM,MAAM,wBAGdT,IAAXD,GACFgC,OAAOC,SAASC,0CAA4CF,OAAOC,SAASC,WAIvEpC,gBAACD,EAAasC,UAASC,MAAO,CAAEpC,OAAQA,IAAWK,EAAMgC"}