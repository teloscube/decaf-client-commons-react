import{buildDecafClient as n}from"@decafhub/decaf-client";import e from"js-cookie";import t,{useContext as i,useEffect as o}from"react";const a=t.createContext({client:void 0}),r=()=>i(a);function s(n){return t.createElement("div",{className:"spinner-wrapper"},t.createElement("style",null,`\n    .spinner-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n      flex-direction: column;\n    }\n    .spinner-text {\n      color: ${n.titleColor||"#255d91"};\n    }\n    .spinner {\n      width: ${n.size||"40px"};\n      height: ${n.size||"40px"};\n      position: relative;\n      margin: 10px auto;\n    }\n\n    .double-bounce1,\n    .double-bounce2 {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: ${n.color||"#1890ff"};\n      opacity: 0.6;\n      position: absolute;\n      top: 0;\n      left: 0;\n\n      -webkit-animation: sk-bounce 2s infinite ease-in-out;\n      animation: sk-bounce 2s infinite ease-in-out;\n    }\n\n    .double-bounce2 {\n      -webkit-animation-delay: -1s;\n      animation-delay: -1s;\n    }\n\n    @-webkit-keyframes sk-bounce {\n      0%,\n      100% {\n        -webkit-transform: scale(0);\n      }\n      50% {\n        -webkit-transform: scale(1);\n      }\n    }\n\n    @keyframes sk-bounce {\n      0%,\n      100% {\n        transform: scale(0);\n        -webkit-transform: scale(0);\n      }\n      50% {\n        transform: scale(1);\n        -webkit-transform: scale(1);\n      }\n    }\n  `),t.createElement("div",{className:"spinner"},t.createElement("div",{className:"double-bounce1"}),t.createElement("div",{className:"double-bounce2"})),n.title&&t.createElement("p",{className:"spinner-text"},n.title))}function c(i){const[r,c]=t.useState(void 0),[l,u]=t.useState(!0);return o(()=>{const t=function(){const t=function(){const n=e.get("ember_simple_auth-session");if(n)try{var t;const e=JSON.parse(n);return null==e||null==(t=e.authenticated)?void 0:t.token}catch(n){return void console.error("Can not parse authentication information!")}}();return t?n("",{token:t}):void 0}();t?t.barista.get("/healthchecks/").then(()=>{c(t),u(!1)}).catch(()=>{c(void 0),u(!1)}):(u(!1),c(void 0))},[]),l?t.createElement(s,{title:"Please Wait..."}):void 0===r?(window.location.href=`/webapps/waitress/production/?next=${window.location.href}`,null):t.createElement(a.Provider,{value:{client:r}},i.children)}export{c as DecafApp,s as DecafSpinner,r as useDecaf};
//# sourceMappingURL=index.modern.js.map
